{
    "PRINT" : {
        "prefix" : "print",
        "body" : ["PRINT \"$1\"."],
        "description" : "print to the terminal screen"
    },
    "CLEAR" : {
        "prefix" : "clear",
        "body" : ["CLEARSCREEN."],
        "description" : "clear th terminal screen"
    },
    "SET TO" : {
        "prefix" : "set",
        "body" : ["SET $1 TO $2."],
        "description" : "set the value of a variable; if the variable doesn't exist create it at the global scope"
    },
    "UNSET" : {
        "prefix" : "unset",
        "body" : ["UNSET $1."],
        "description" : "remove a user defined variable"
    },
    "LOCK TO" : {
        "prefix" : "lock",
        "body" : ["LOCK $1 TO $2."],
        "description" : "this variable will be recalculated on the fly every time it is used"
    },
    "UNLOCK" : {
        "prefix" : "unlock",
        "body" : ["unlock $1."],
        "description" : "release variable bound by lock"
    },
    "DEFINED" : {
        "prefix" : "defined",
        "body" : ["DEFINED $1"],
        "description" : "returns true if variable is defined and false if not"
    },
    "TOGGLE" : {
        "prefix" : "toggle",
        "body" : ["TOGGLE $1."],
        "description" : "converts variable to boolean if it isn't and then toggles it's value FALSE -> TRUE or TRUE -> FALSE"
    },
    "BREAK" : {
        "prefix" : "break",
        "body" : ["BREAK."],
        "description" : "breaks out of a loop"
    },
    "IF" : {
        "prefix" : "if",
        "body" : [
            "IF $1 {",
            "    $2",
            "}"
        ],
        "description" : "execute code if condition is true"
    },
    "IF ELSE" : {
        "prefix" : "ifelse",
        "body" : [
            "IF $1 {",
            "    $2",
            "} ELSE {",
            "    $3",
            "}"
        ],
        "description" : "execute code if condition is true else execute other code"
    },
    "IF ELSE IF" : {
        "prefix" : "ifelseif",
        "body" : [
            "IF $1 {",
            "    $2",
            "} ELSE IF $3 {",
            "    $4",
            "}"
        ],
        "description" : "execute code if condition is true else check other condition and execute code"
    },
    "IF ELSE IF ELSE" : {
        "prefix" : "ifelseifelse",
        "body" : [
            "IF $1 {",
            "    $2",
            "} ELSE IF $3 {",
            "    $4",
            "} ELSE {",
            "    $5",
            "}"
        ],
        "description" : "execute code if condition is true else check other condition and execute other code else do something else"
    },
    "ELSE" : {
        "prefix" : "else",
        "body" : [
            "ELSE {",
            "    $1",
            "}"
        ],
        "description" : "part of an if statement; catches all other cases"
    },
    "ELSE IF" : {
        "prefix" : "elseif",
        "body" : [
            "ELSE IF $1 {",
            "    $2",
            "}"
        ],
        "description" : "part of an if statement; adds alternative condition"
    },
    "CHOOSE" : {
        "prefix" : "choose",
        "body" : ["CHOOSE $1 IF $2 ELSE $3."],
        "description" : "ternary operator"
    },
    "UNTIL" : {
        "prefix" : "until",
        "body" : [
            "UNTIL $1 {",
            "    $2",
            "}"
        ],
        "description" : "until loop"
    },
    "FROM UNTIL" : {
        "prefix" : "fromu",
        "body" : [
            "FROM {LOCAL $1 IS $2.} UNTIL $3 STEP {SET $1 TO $1 + 1.} DO {",
            "    $4",
            "}"
        ],
        "description" : "like a for loop in C/C++"
    },
    "WAIT" : {
        "prefix" : "wait",
        "body" : ["WAIT $1."],
        "description" : "wait x seconds"
    },
    "WAIT UNTIL" : {
        "prefix" : "waitu",
        "body" : ["WAIT UNTIL $1."],
        "description" : "wait until an event happens"
    },
    "FOR" : {
        "prefix" : "for",
        "body" : [
            "FOR $1 IN $2 {",
            "    $1:$1...",
            "}"
        ],
        "description" : "loops over a list of variables"
    },
    "WHEN" : {
        "prefix" : "when",
        "body" : [
            "WHEN $1 THEN {",
            "    $2",
            "    RETURN $3",
            "}"
        ],
        "description" : "check in the background for condition that will cause some code to be executed; this is a trigger; if true is returned it is checked more than once"
    },
    "ON" : {
        "prefix" : "on",
        "body" : [
            "ON $1 {",
            "    $2",
            "    RETURN $3",
            "}"
        ],
        "description" : "check if the expression has changed since last check (this can be a boolean, scalar etc.) if so, execute the code; this is a trigger; if true is returned it is checked more than once"
    },
    "FUNCTION" : {
        "prefix" : "function",
        "body" : [
            "FUNCTION $1 {",
            "    PARAMETER $2.",
            "    $3",
            "    RETURN $4.",
            "}"
        ],
        "description" : "declare a function with a parameter and return a value"
    },
    "PARAMETER" : {
        "prefix" : "parameter",
        "body" : ["PARAMETER $1."],
        "description" : "declare parameter of a function or of the script"
    },
    "DECLARE TO" : {
        "prefix" : "declare",
        "body" : ["DECLARE $1 TO $2."],
        "description" : "declare a new variable to a value"
    },
    "LOCAL IS" : {
        "prefix" : "localis",
        "body" : ["LOCAL $1 IS $2."],
        "description" : "declare a new local variable"
    },
    "GLOBAL IS" : {
        "prefix" : "globalis",
        "body" : ["GLOBAL $1 IS $2."],
        "description" : "declare a new global variable"
    },
    "RETURN" : {
        "prefix" : "return",
        "body" : ["RETURN $1."],
        "description" : "return from a function"
    }
}
